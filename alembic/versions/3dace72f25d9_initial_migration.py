"""Initial migration

Revision ID: 3dace72f25d9
Revises: 
Create Date: 2025-07-29 11:22:35.918623

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '3dace72f25d9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('line',
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('color', sa.Enum('RED', 'ORANGE', 'YELLOW', 'LIME', 'GREEN', 'TEAL', 'CYAN', 'BLUE', 'INDIGO', 'VIOLET', 'PINK', 'GRAY', name='color'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_line_name'), 'line', ['name'], unique=True)
    op.create_table('logdevice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('token_expiry', sa.DateTime(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_logdevice_name'), 'logdevice', ['name'], unique=True)
    op.create_table('manufacturer',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_manufacturer_name'), 'manufacturer', ['name'], unique=True)
    op.create_table('machine',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cost_center', sa.Integer(), nullable=False),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('manufacturer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('measures_tool_life', sa.Boolean(), nullable=False),
    sa.Column('channels', sa.Integer(), nullable=False),
    sa.Column('line_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('log_device_id', sa.Integer(), nullable=True),
    sa.Column('current_recipe_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['line_id'], ['line.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['log_device_id'], ['logdevice.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cost_center'),
    sa.UniqueConstraint('name', 'line_id')
    )
    op.create_index(op.f('ix_machine_name'), 'machine', ['name'], unique=False)
    op.create_table('recipe',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('workpiece_id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['workpiece_id'], ['workpiece.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'workpiece_id', 'machine_id')
    )
    op.create_index(op.f('ix_recipe_name'), 'recipe', ['name'], unique=False)
    op.create_foreign_key(None, 'machine', 'recipe', ['current_recipe_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'recipe', 'machine', ['machine_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'toolposition', 'recipe', ['recipe_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'toolconsumption', 'toolposition', ['tool_position_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'toollife', 'toolposition', ['tool_position_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'note', 'toollife', ['tool_life_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'note', 'toolorder', ['tool_order_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'note', 'orderdelivery', ['order_delivery_id'], ['id'], ondelete='CASCADE')
    op.create_table('requestlog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('method', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('endpoint', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.Column('response_time', sa.Numeric(precision=10, scale=3), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('servicemetrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('total_requests', sa.Integer(), nullable=False),
    sa.Column('total_errors', sa.Integer(), nullable=False),
    sa.Column('avg_response_time', sa.Numeric(precision=10, scale=3), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shift',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('number')
    )
    op.create_table('tooltype',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('perishable', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tooltype_name'), 'tooltype', ['name'], unique=True)
    op.create_table('changereason',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('sentiment', sa.Enum('VERY_BAD', 'BAD', 'NEUTRAL', 'GOOD', 'VERY_GOOD', name='sentiment'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('tool_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tool_type_id'], ['tooltype.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'tool_type_id')
    )
    op.create_index(op.f('ix_changereason_name'), 'changereason', ['name'], unique=False)
    op.create_table('heartbeat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('log_device_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['log_device_id'], ['logdevice.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_heartbeat_log_device_id_timestamp', 'heartbeat', ['log_device_id', 'timestamp'], unique=False)
    op.create_table('measureable',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'machine_id')
    )
    op.create_index(op.f('ix_measureable_name'), 'measureable', ['name'], unique=False)
    op.create_table('tool',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('erp_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cpn_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tool_type_id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('regrind', sa.Boolean(), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=False),
    sa.Column('has_serialnumber', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=False),
    sa.Column('stop_order', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturer.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tool_type_id'], ['tooltype.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'tool_type_id', 'manufacturer_id')
    )
    op.create_index(op.f('ix_tool_cpn_number'), 'tool', ['cpn_number'], unique=True)
    op.create_index(op.f('ix_tool_erp_number'), 'tool', ['erp_number'], unique=True)
    op.create_index(op.f('ix_tool_name'), 'tool', ['name'], unique=False)
    op.create_index(op.f('ix_tool_number'), 'tool', ['number'], unique=True)
    op.create_table('toolattribute',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tool_type_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tool_type_id'], ['tooltype.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'tool_type_id')
    )
    op.create_table('toolsetting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tool_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tool_type_id'], ['tooltype.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'tool_type_id')
    )
    op.create_table('user',
    sa.Column('initials', sqlmodel.sql.sqltypes.AutoString(length=4), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pin', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=False),
    sa.Column('role', sa.Enum('OPERATOR', 'SUPERVISOR', 'MAINTENANCE', 'ENGINEER', name='userrole'), nullable=False),
    sa.Column('payment_type', sa.Enum('HOURLY', 'SALARY', name='paymenttype'), nullable=False),
    sa.Column('shift_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('token_expiry', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['shift_id'], ['shift.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_initials'), 'user', ['initials'], unique=True)
    op.create_table('workpiece',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('material', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('dimensions', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('line_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['line_id'], ['line.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('changeover',
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('performed_by', sa.Integer(), nullable=True),
    sa.Column('timestamps', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['performed_by'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_changeover_timestamps'), 'changeover', ['timestamps'], unique=False)
    op.create_table('ordercompletion',
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('vendor', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('batch', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('customer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('order', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('document_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Time(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('workpiece_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workpiece_id'], ['workpiece.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ordercompletion_batch'), 'ordercompletion', ['batch'], unique=False)
    op.create_index(op.f('ix_ordercompletion_customer'), 'ordercompletion', ['customer'], unique=False)
    op.create_index(op.f('ix_ordercompletion_date'), 'ordercompletion', ['date'], unique=False)
    op.create_index(op.f('ix_ordercompletion_document_number'), 'ordercompletion', ['document_number'], unique=True)
    op.create_index(op.f('ix_ordercompletion_order'), 'ordercompletion', ['order'], unique=False)
    op.create_index(op.f('ix_ordercompletion_user_id'), 'ordercompletion', ['user_id'], unique=False)
    op.create_index(op.f('ix_ordercompletion_vendor'), 'ordercompletion', ['vendor'], unique=False)
    op.create_index(op.f('ix_ordercompletion_workpiece_id'), 'ordercompletion', ['workpiece_id'], unique=False)
    op.create_table('production',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('workpiece_id', sa.Integer(), nullable=False),
    sa.Column('line_id', sa.Integer(), nullable=True),
    sa.Column('target', sa.Integer(), nullable=False),
    sa.Column('finished', sa.Integer(), nullable=False),
    sa.Column('started', sa.Integer(), nullable=False),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['line_id'], ['line.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workpiece_id'], ['workpiece.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_production_date'), 'production', ['date'], unique=False)
    op.create_index(op.f('ix_production_workpiece_id'), 'production', ['workpiece_id'], unique=False)
    op.create_table('recipetool',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ),
    sa.ForeignKeyConstraint(['tool_id'], ['tool.id'], ),
    sa.PrimaryKeyConstraint('recipe_id', 'tool_id')
    )
    op.create_table('toolattributevalue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('tool_attribute_id', sa.Integer(), nullable=False),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['tool_attribute_id'], ['toolattribute.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tool_id'], ['tool.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('toolorder',
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('suffix', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('line', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('order_date', sa.DateTime(), nullable=False),
    sa.Column('estimated_delivery_date', sa.DateTime(), nullable=True),
    sa.Column('gross_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tool_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tracking_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipping_company', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fulfilled', sa.Boolean(), nullable=False),
    sa.Column('delivered', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tool_id'], ['tool.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number', 'suffix', 'line')
    )
    op.create_index(op.f('ix_toolorder_number'), 'toolorder', ['number'], unique=False)
    op.create_table('toolposition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('selected', sa.Boolean(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('tool_count', sa.Integer(), nullable=False),
    sa.Column('tool_settings', sa.JSON(), nullable=True),
    sa.Column('expected_life', sa.Integer(), nullable=True),
    sa.Column('min_life', sa.Integer(), nullable=True),
    sa.CheckConstraint('(selected = true)::int <= 1', name='check_single_selected'),
    sa.ForeignKeyConstraint(['tool_id'], ['tool.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('uq_name_recipe_selected', 'toolposition', ['name', 'recipe_id'], unique=True, postgresql_where=sa.text('selected = true'))
    op.create_table('orderdelivery',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('delivery_date', sa.DateTime(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['toolorder.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id', 'delivery_date', 'quantity')
    )
    op.create_table('toolconsumption',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('consumption_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('value', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('tool_position_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('workpiece_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tool_id'], ['tool.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workpiece_id'], ['workpiece.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tool_id', 'datetime')
    )
    op.create_index(op.f('ix_toolconsumption_consumption_type'), 'toolconsumption', ['consumption_type'], unique=False)
    op.create_index(op.f('ix_toolconsumption_datetime'), 'toolconsumption', ['datetime'], unique=False)
    op.create_table('toollife',
    sa.Column('reached_life', sa.Integer(), nullable=False),
    sa.Column('machine_channel', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('tool_settings', sa.JSON(), nullable=True),
    sa.Column('additional_measurements', sa.JSON(), nullable=True),
    sa.Column('tool_count', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('change_reason_id', sa.Integer(), nullable=True),
    sa.Column('tool_position_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['change_reason_id'], ['changereason.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tool_id'], ['tool.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('note',
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sentiment', sa.Enum('VERY_BAD', 'BAD', 'NEUTRAL', 'GOOD', 'VERY_GOOD', name='sentiment'), nullable=False),
    sa.Column('tool_life_id', sa.Integer(), nullable=True),
    sa.Column('tool_order_id', sa.Integer(), nullable=True),
    sa.Column('order_delivery_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_note_order_delivery_id'), 'note', ['order_delivery_id'], unique=False)
    op.create_index(op.f('ix_note_tool_life_id'), 'note', ['tool_life_id'], unique=False)
    op.create_index(op.f('ix_note_tool_order_id'), 'note', ['tool_order_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_note_tool_order_id'), table_name='note')
    op.drop_index(op.f('ix_note_tool_life_id'), table_name='note')
    op.drop_index(op.f('ix_note_order_delivery_id'), table_name='note')
    op.drop_table('note')
    op.drop_table('toollife')
    op.drop_index(op.f('ix_toolconsumption_datetime'), table_name='toolconsumption')
    op.drop_index(op.f('ix_toolconsumption_consumption_type'), table_name='toolconsumption')
    op.drop_table('toolconsumption')
    op.drop_table('orderdelivery')
    op.drop_index('uq_name_recipe_selected', table_name='toolposition', postgresql_where=sa.text('selected = true'))
    op.drop_table('toolposition')
    op.drop_index(op.f('ix_toolorder_number'), table_name='toolorder')
    op.drop_table('toolorder')
    op.drop_table('toolattributevalue')
    op.drop_table('recipetool')
    op.drop_index(op.f('ix_production_workpiece_id'), table_name='production')
    op.drop_index(op.f('ix_production_date'), table_name='production')
    op.drop_table('production')
    op.drop_index(op.f('ix_ordercompletion_workpiece_id'), table_name='ordercompletion')
    op.drop_index(op.f('ix_ordercompletion_vendor'), table_name='ordercompletion')
    op.drop_index(op.f('ix_ordercompletion_user_id'), table_name='ordercompletion')
    op.drop_index(op.f('ix_ordercompletion_order'), table_name='ordercompletion')
    op.drop_index(op.f('ix_ordercompletion_document_number'), table_name='ordercompletion')
    op.drop_index(op.f('ix_ordercompletion_date'), table_name='ordercompletion')
    op.drop_index(op.f('ix_ordercompletion_customer'), table_name='ordercompletion')
    op.drop_index(op.f('ix_ordercompletion_batch'), table_name='ordercompletion')
    op.drop_table('ordercompletion')
    op.drop_index(op.f('ix_changeover_timestamps'), table_name='changeover')
    op.drop_table('changeover')
    op.drop_table('workpiece')
    op.drop_index(op.f('ix_user_initials'), table_name='user')
    op.drop_table('user')
    op.drop_table('toolsetting')
    op.drop_table('toolattribute')
    op.drop_index(op.f('ix_tool_number'), table_name='tool')
    op.drop_index(op.f('ix_tool_name'), table_name='tool')
    op.drop_index(op.f('ix_tool_erp_number'), table_name='tool')
    op.drop_index(op.f('ix_tool_cpn_number'), table_name='tool')
    op.drop_table('tool')
    op.drop_index(op.f('ix_measureable_name'), table_name='measureable')
    op.drop_table('measureable')
    op.drop_index('ix_heartbeat_log_device_id_timestamp', table_name='heartbeat')
    op.drop_table('heartbeat')
    op.drop_index(op.f('ix_changereason_name'), table_name='changereason')
    op.drop_table('changereason')
    op.drop_index(op.f('ix_tooltype_name'), table_name='tooltype')
    op.drop_table('tooltype')
    op.drop_table('shift')
    op.drop_table('servicemetrics')
    op.drop_table('requestlog')
    op.drop_index(op.f('ix_recipe_name'), table_name='recipe')
    op.drop_table('recipe')
    op.drop_index(op.f('ix_manufacturer_name'), table_name='manufacturer')
    op.drop_table('manufacturer')
    op.drop_index(op.f('ix_machine_name'), table_name='machine')
    op.drop_table('machine')
    op.drop_index(op.f('ix_logdevice_name'), table_name='logdevice')
    op.drop_table('logdevice')
    op.drop_index(op.f('ix_line_name'), table_name='line')
    op.drop_table('line')
    # ### end Alembic commands ###
