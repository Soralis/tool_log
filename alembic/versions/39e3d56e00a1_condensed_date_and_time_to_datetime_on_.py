"""condensed date and time to datetime on toolConsumption

Revision ID: 39e3d56e00a1
Revises: a968d09cc3b8
Create Date: 2025-01-29 10:07:48.279665

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '39e3d56e00a1'
down_revision: Union[str, None] = 'a968d09cc3b8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('toolconsumption', sa.Column('datetime', sa.DateTime(), nullable=False))
    op.drop_index('ix_toolconsumption_date', table_name='toolconsumption')
    op.drop_index('ix_toolconsumption_number', table_name='toolconsumption')
    op.create_index(op.f('ix_toolconsumption_number'), 'toolconsumption', ['number'], unique=True)
    op.create_index(op.f('ix_toolconsumption_datetime'), 'toolconsumption', ['datetime'], unique=False)
    op.drop_column('toolconsumption', 'date')
    op.drop_column('toolconsumption', 'time')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('toolconsumption', sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('toolconsumption', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_toolconsumption_datetime'), table_name='toolconsumption')
    op.drop_index(op.f('ix_toolconsumption_number'), table_name='toolconsumption')
    op.create_index('ix_toolconsumption_number', 'toolconsumption', ['number'], unique=False)
    op.create_index('ix_toolconsumption_date', 'toolconsumption', ['date'], unique=False)
    op.drop_column('toolconsumption', 'datetime')
    # ### end Alembic commands ###
