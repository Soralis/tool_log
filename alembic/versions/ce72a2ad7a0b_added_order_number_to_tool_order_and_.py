"""added order number to tool order and class OrderDelivery

Revision ID: ce72a2ad7a0b
Revises: 4a97d7dd7d97
Create Date: 2025-02-17 07:11:01.480085

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'ce72a2ad7a0b'
down_revision: Union[str, None] = '4a97d7dd7d97'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orderdelivery',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('delivery_date', sa.DateTime(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['toolorder.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('note', sa.Column('tool_order_id', sa.Integer(), nullable=True))
    op.add_column('note', sa.Column('order_delivery_id', sa.Integer(), nullable=True))
    op.alter_column('note', 'tool_life_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_note_order_delivery_id'), 'note', ['order_delivery_id'], unique=False)
    op.create_index(op.f('ix_note_tool_order_id'), 'note', ['tool_order_id'], unique=False)
    op.create_foreign_key(None, 'note', 'orderdelivery', ['order_delivery_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'note', 'toolorder', ['tool_order_id'], ['id'], ondelete='CASCADE')
    op.add_column('toolorder', sa.Column('order_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('toolorder', sa.Column('estimated_delivery_date', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_toolorder_order_number'), 'toolorder', ['order_number'], unique=True)
    op.drop_column('toolorder', 'delivery_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('toolorder', sa.Column('delivery_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_toolorder_order_number'), table_name='toolorder')
    op.drop_column('toolorder', 'estimated_delivery_date')
    op.drop_column('toolorder', 'order_number')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_index(op.f('ix_note_tool_order_id'), table_name='note')
    op.drop_index(op.f('ix_note_order_delivery_id'), table_name='note')
    op.alter_column('note', 'tool_life_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('note', 'order_delivery_id')
    op.drop_column('note', 'tool_order_id')
    op.drop_table('orderdelivery')
    # ### end Alembic commands ###
