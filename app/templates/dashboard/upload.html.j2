{% extends "dashboard/base.html.j2" %}
{% block title %}Data Upload{% endblock %}

{% block content %}
<div class="container bg-slate-900 mx-auto px-4 py-8">  
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    <!-- Tool Consumption Upload Button -->
    <div class="p-6 bg-slate-800 rounded-lg shadow-md">
      <h2 class="text-xl font-semibold mb-3">Tool Consumption Data</h2>
      <p class="text-gray-200 mb-4">Upload Excel/CSV files containing tool consumption data.</p>
      <button
        onclick="toggleInstructions('consumption')"
        class="text-gray-200 hover:text-teal-500 mb-2 flex items-center"
      >
        <span id="consumptionArrow" class="mr-2">▶</span>
        Where do I get the data?
      </button>
      <ul id="consumptionInstructions" class="list-disc list-inside text-gray-200 mb-4 hidden">
        <li>Gaaga</li>
        <li>go to asdasd # MB51</li>
        <li>asddd 'get variant'</li>
        <li>Enter 'CMB51' ing the gsdfgsdf'vadfsiant' field and 'JJEFFERS' in the 'createdfgdfgs by' field</li>
        <li>And then ...</li>
      </ul>
      <button 
        onclick="openUploadModal('tool-consumption', 'Tool Consumption Data')"
        class="bg-teal-700 hover:bg-teal-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
      >
        Upload Tool Consumption
      </button>
    </div>

    <!-- Parts Produced Upload Button -->
    <div class="p-6 bg-slate-800 rounded-lg shadow-md">
      <h2 class="text-xl font-semibold mb-3">Parts Production Data</h2>
      <p class="text-gray-200 mb-4">Upload Excel file containing parts production data.</p>
      <button
        onclick="toggleInstructions('production')"
        class="text-gray-200 hover:text-teal-500 mb-2 flex items-center"
      >
        <span id="productionArrow" class="mr-2">▶</span>
        Where do I get the data?
      </button>
      <ul id="productionInstructions" class="list-disc list-inside text-gray-200 mb-4 hidden">
        <li>Open SAP</li>
        <li>Go to transaction # MB51</li>
        <li>Click 'get variant' (Shift + F5)</li>
        <li>Enter 'CMB51' in the 'variant' field and 'JJEFFERS' in the 'created by' field</li>
        <li>Execute popup</li>
        <li>Select the date range (don't worry, duplicates will be skipped)</li>
        <li>Execute MB51 main screen</li>
        <li>Right click anywhere in the data to export to spreadsheet</li>
        <li>And then ...</li>
      </ul>
      <button 
        onclick="openUploadModal('parts-produced', 'Parts Production Data')"
        class="bg-teal-700 hover:bg-teal-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
      >
        Upload Parts Production
      </button>
    </div>
  </div>

  <!-- Upload Modal -->
  <div id="uploadModal" class="fixed inset-0 backdrop-blur-sm bg-black/30 hidden flex items-center justify-center">
    <div class="bg-slate-800 p-8 rounded-lg shadow-xl">
      <div class="flex justify-between items-center mb-4">
        <h2 id="modalTitle" class="text-xl font-bold"></h2>
        <button onclick="closeUploadModal()" class="text-gray-500 hover:text-gray-700">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>

      <form id="uploadForm" enctype="multipart/form-data">
        <input type="hidden" id="uploadType" name="uploadType">
        <div class="mb-4">
          <label class="block text-sm font-bold mb-2" for="file">
            Select File
          </label>
          <input 
            class="shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline"
            type="file" 
            id="file" 
            name="file"
            accept=".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            required
          >
        </div>
        
        <div class="flex justify-end space-x-4">
          <button 
            type="button"
            onclick="closeUploadModal()"
            class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
          >
            Cancel
          </button>
          <button 
            type="submit"
            class="bg-teal-700 hover:bg-teal-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
          >
            Upload
          </button>
        </div>
      </form>

      <div id="message" class="hidden mt-4 p-4 rounded"></div>
    </div>
  </div>
</div>

<script>
  function toggleInstructions(data) {
    console.log(data)
    const instructions = document.getElementById(`${data}Instructions`);
    const arrow = document.getElementById(`${data}Arrow`);
    const button = arrow.parentElement;
    
    if (instructions.classList.contains('hidden')) {
      instructions.classList.remove('hidden');
      arrow.textContent = '▼';
    } else {
      instructions.classList.add('hidden');
      arrow.textContent = '▶';
    }
  }

  function openUploadModal(type, title) {
    document.getElementById('uploadModal').classList.remove('hidden');
    document.getElementById('modalTitle').textContent = title;
    document.getElementById('uploadType').value = type;
    document.getElementById('message').classList.add('hidden');
    document.getElementById('file').value = '';
  }

  function closeUploadModal() {
    document.getElementById('uploadModal').classList.add('hidden');
  }

  document.getElementById('uploadForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const fileInput = document.getElementById('file');
    const messageDiv = document.getElementById('message');
    const uploadType = document.getElementById('uploadType').value;
    
    if (fileInput.files.length > 0) {
      const formData = new FormData();
      formData.append('file', fileInput.files[0]);
      
      messageDiv.textContent = 'Uploading...';
      messageDiv.classList.remove('hidden', 'bg-green-100', 'bg-red-100');
      messageDiv.classList.add('bg-yellow-100', 'border-yellow-400', 'text-yellow-700');
      
      try {
        const response = await fetch(`/dashboard/upload/${uploadType}`, {
          method: 'POST',
          body: formData
        });
        
        if (response.ok) {
          const data = await response.json();
          const stats = data.result;
          messageDiv.textContent = `File "${data.filename}" uploaded successfully! Processed ${stats.total_records} records (${stats.inserted} inserted, ${stats.skipped} duplicates skipped, ${stats.bad_data} rejected due to invalid data)`;
          messageDiv.classList.remove('bg-yellow-100', 'border-yellow-400', 'text-yellow-700');
          messageDiv.classList.add('bg-green-100', 'border-green-400', 'text-green-700');
          
          // Auto close modal after successful upload
          {# setTimeout(() => {
            closeUploadModal();
          }, 2000); #}
        } else {
          throw new Error('Upload failed');
        }
      } catch (error) {
        messageDiv.textContent = 'Upload failed. Please try again.';
        messageDiv.classList.remove('bg-yellow-100', 'border-yellow-400', 'text-yellow-700');
        messageDiv.classList.add('bg-red-100', 'border-red-400', 'text-red-700');
      }
    }
  });

  // Close modal when clicking outside
  document.getElementById('uploadModal').addEventListener('click', function(e) {
    if (e.target === this) {
      closeUploadModal();
    }
  });
</script>
{% endblock %}
