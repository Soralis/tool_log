<table class="table table-striped w-full">
    <thead class="bg-gray-900">
        <tr>
            <th class="px-4 py-2 text-left">Device</th>
            <th class="px-4 py-2 text-left">Healthy</th>
            <th class="px-4 py-2 text-left">Stability 24h</th>
            <th class="px-4 py-2 text-left">Stability 7d</th>
            <th class="px-4 py-2 text-left">Stability month</th>
            <th class="px-4 py-2 text-left">Last Seen</th>
        </tr>
    </thead>
    <tbody id="heartbeat-table-body">
    </tbody>
</table>

<!-- Connection Status -->
<div id="connection-status" class="fixed bottom-4 right-4 px-4 py-2 rounded-full text-white bg-yellow-500/100">
    Connecting...
</div>

<script>
    const statusDiv = document.getElementById('connection-status');
    // Function to update the heartbeat table
    function updateHeartbeatTable(data) {
        const tableBody = document.getElementById("heartbeat-table-body");
        tableBody.innerHTML = ""; // Clear existing table data

        data.forEach(item => {
            const row = tableBody.insertRow();

            const deviceCell = row.insertCell();
            deviceCell.classList.add("px-4", "py-2");
            deviceCell.textContent = item.Device;

            const healthyCell = row.insertCell();
            healthyCell.classList.add("px-4", "py-2", "font-bold");
            healthyCell.textContent = item.Healthy ? "Yes" : "No";
            healthyCell.classList.add(item.Healthy ? "text-green-500" : "text-red-500");

            const stability24hCell = row.insertCell();
            stability24hCell.classList.add("px-4", "py-2", "text-left");
            stability24hCell.textContent = item["Stability 24h"] + "%";

            const stability7dCell = row.insertCell();
            stability7dCell.classList.add("px-4", "py-2", "text-left");
            stability7dCell.textContent = item["Stability 7d"] + "%";

            const stabilityMonthCell = row.insertCell();
            stabilityMonthCell.classList.add("px-4", "py-2", "text-left");
            stabilityMonthCell.textContent = item["Stability month"] + "%";

            const lastSeenCell = row.insertCell();
            lastSeenCell.classList.add("px-4", "py-2", "text-left");
            lastSeenCell.textContent = item["Last Seen"];
        });
    }

    // WebSocket connection
    function connectWebSocket() {
        const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
        const websocket = new WebSocket(`${protocol}//${window.location.host}/dashboard/ws/heartbeat`);

        websocket.onopen = function() {
            statusDiv.className = 'hidden';
        };    

        websocket.onmessage = function(event) {
            const data = JSON.parse(event.data);
            updateHeartbeatTable(data);
        };

        websocket.onclose = function() {
            statusDiv.textContent = 'Reconnecting...';
            statusDiv.className = 'fixed bottom-4 right-4 px-4 py-2 rounded-full text-white bg-yellow-500/100';
            // Attempt to reconnect after 5 seconds
            setTimeout(connectWebSocket, 5000);
        };

        websocket.onerror = function(error) {
            console.error("WebSocket error:", error);
        };

        return websocket
    }

    connectWebSocket()
</script>
