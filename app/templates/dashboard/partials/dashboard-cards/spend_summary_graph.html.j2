<div id="spendSummaryChart" style="width:600px; height:600px;"></div>

<script>
  function renderSpendSummaryChart(chartData) {
    const data = chartData.labels.map((label, index) => ({
      label: label,
      value: chartData.data[index]
    }));

    const width = 600;
    const height = 600;
    const radius = Math.min(width, height) / 2;

    d3.select("#spendSummaryChart").selectAll("*").remove();

    const svg = d3.select("#spendSummaryChart")
      .append("svg")
      .attr("width", width)
      .attr("height", height)
      .append("g")
      .attr("transform", `translate(${width / 2},${height / 2})`);

    const color = d3.scaleOrdinal()
      .domain(data.map(d => d.label))
      .range(d3.schemeCategory10);

    const pie = d3.pie()
      .value(d => d.value);

    const arc = d3.arc()
      .innerRadius(0)
      .outerRadius(radius);

    const arcs = svg.selectAll(".arc")
      .data(pie(data))
      .enter()
      .append("g")
      .attr("class", "arc");

    arcs.append("path")
      .attr("d", arc)
      .attr("fill", d => color(d.data.label));

    arcs.append("text")
      .attr("transform", d => {
        const [x, y] = arc.centroid(d);
        const scale = 1.5;
        return `translate(${x * scale}, ${y * scale})`;
      })
      .attr("dy", "0.35em")
      .text(d => d.data.label);
  }

  // Initial render with empty data
  renderSpendSummaryChart({ labels: [], data: [] });

  // Render chart with data from server
  renderSpendSummaryChart({{ chart_data|tojson }});
</script>
