<div id="machine-status">
  <table id="machine-status-table">
    <thead>
      <tr>
        <th class="border px-4 py-2 text-left hidden">ID</th>
        <th class="border px-4 py-2 text-left">Name</th>
        <th class="border px-4 py-2 text-left">Workpiece</th>
        <th class="border px-4 py-2 text-left">Since</th>
      </tr>
    </thead>
    <tbody>
      {# Rows will be dynamically inserted here #}
    </tbody>
  </table>
</div>

<script type="text/javascript">
(function() {
  const scheme = location.protocol === 'https:' ? 'wss' : 'ws';
  const socket = new WebSocket(`${scheme}://${location.host}/dashboard/ws/machine_status`);
  const tbody = document.querySelector('#machine-status-table tbody');

  socket.onmessage = event => {
    console.log('Machine status WebSocket message received:', event.data);
    const msg = JSON.parse(event.data);
  const { op, data } = msg;
  if (op === "initial") {
    console.log("Initial data received:", data);
    // Initialize the table with initial data if provided.
    if (Array.isArray(data)) {
      data.forEach(machine => {
        const id = machine.machine_id;
        const name = machine.machine_name || "";
        const workpiece = machine.current_workpiece || "";
        const since = machine.timestamp || "";
        const newRow = document.createElement("tr");
        newRow.setAttribute("data-id", id);
        newRow.innerHTML = `
          <td class="border px-4 py-2 hidden">${id}</td>
          <td class="border px-4 py-2">${name}</td>
          <td class="border px-4 py-2">${workpiece}</td>
          <td class="border px-4 py-2">${since}</td>
        `;
        tbody.appendChild(newRow);
      });
    }
    return;
  }
    const id = data.machine_id;
    let row = tbody.querySelector(`tr[data-id="${id}"]`);

    // Handle delete
    if (op === 'DELETE') {
      if (row) row.remove();
      return;
    }

    // Build cell HTML
    console.log(data)
    const name = data.machine_name || '';
    const workpiece = data.current_workpiece || '';
    const since = machine.timestamp || "";
    const cells = `
      <td class="border px-4 py-2 hidden">${id}</td>
      <td class="border px-4 py-2">${name}</td>
      <td class="border px-4 py-2">${workpiece}</td>
      <td class="border px-4 py-2">${since}</td>
    `;

    if (row) {
      row.innerHTML = cells;
    } else {
      const newRow = document.createElement('tr');
      newRow.setAttribute('data-id', id);
      newRow.innerHTML = cells;
      tbody.appendChild(newRow);
    }
  };

  socket.onclose = () => {
    console.warn('Machine status WebSocket closed');
  };
})();
</script>
