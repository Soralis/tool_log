{% extends "dashboard/base.html.j2" %}

{% block title %}Log Reliabiity{% endblock %}
{% block subinfo %}{% endblock %}

{% block head %}
{% endblock %}

{% block content %}
    <div class="grid grid-cols-1 lg:grid-cols-2 2xl:grid-cols-3 gap-4">
        {% for graph in graphs %}
          <div class="bg-gray-800 rounded-lg shadow p-4 cursor-pointer hover:bg-gray-700 transition-colors graph-card" 
              data-graph-id="{{ graph.id }}"
              data-options='{{ graph.options|tojson|safe }}'>
              <h3 class="text-lg font-medium text-gray-300 mb-2">{{ graph.title }}</h3>
              <div id="chart-{{ graph.id }}" style="width:100%; height:300px;"></div>
          </div>
        {% endfor %}
    </div>

<script>
function update_charts() {
  let startDate = localStorage.getItem('startDate');
  let endDate = localStorage.getItem('endDate');
  console.log('start and end date', startDate, endDate);
  const graphs_data = fetch('/dashboard/reliability/api/log_reliability', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRFToken': '{{ csrf_token }}'
    },
    body: JSON.stringify({
      start_date: startDate,
      end_date: endDate
    })
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(graphs_data => {
    console.log("Graphs data", graphs_data);
    const graphs = document.querySelectorAll('.graph-card');
    graphs.forEach(card => {
      const chartContainer = card.querySelector('div[id^="chart-"]');
      if(chartContainer) {
        var myChart = echarts.getInstanceByDom(chartContainer);
        if (!myChart) {
          myChart = echarts.init(chartContainer);
        }
        // find graph id in graphs_data and use those options
        const graphId = card.getAttribute('data-graph-id');
        const graphData = graphs_data.find(graph => graph.id == graphId);
        if (!graphData) {
          console.error(`Graph data not found for ID: ${graphId}`);
          return;
        }
        const options = graphData.options;
        myChart.setOption(options);
      }
    });
  })
  .catch(error => {
    console.error('Fetch error:', error);
  });
}

document.addEventListener("DOMContentLoaded", update_charts);
document.body.addEventListener('filterChanged', update_charts);
</script>
{% endblock %}
