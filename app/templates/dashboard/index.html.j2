{% extends "dashboard/base.html.j2" %}

{% block title %}Dashboard Overview{% endblock %}
{% block subinfo %}<h3>Server Address: {{ server_address }}</h3>{% endblock %}

{% block head %}
<style>
    .dashboard-card {
        @apply bg-gray-800 rounded-lg shadow-lg p-4;
    }
    .selection-container {
        @apply space-y-2 mb-4;
    }
    .selection-label {
        @apply block text-sm font-medium text-gray-300;
    }
    .selection {
        @apply mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-600 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md bg-gray-700 text-gray-100;
    }
    .selectable-button {
        @apply px-4 py-2 text-left rounded-md bg-gray-700 text-gray-100 transition-colors cursor-pointer;
    }
    .selectable-button.selected {
        @apply bg-indigo-600 hover:bg-indigo-700;
    }
    .selectable-button:hover:not(.selected) {
        @apply bg-gray-600;
    }
    .checkbox-hidden {
        @apply hidden;
    }
</style>
{% endblock %}

{% block content %}
<div class="mx-auto px-4 py-8">   
    <!-- Main grid container -->
    <div class="grid grid-cols-12 gap-4">
        <div class="col-span-2 dashboard-card">
            <div class="space-y-6" id="card1-content">
                <div class="selection-container">
                    <div class="flex justify-between items-center mb-2">
                        <label class="selection-label">Products</label>
                        <div class="space-x-2">
                            <button class="text-xs text-indigo-400 hover:text-indigo-300 transition-colors"
                                    onclick="AllCheckboxes(this, true)">
                                Select All
                            </button>
                            <button class="text-xs text-indigo-400 hover:text-indigo-300 transition-colors"
                                    onclick="AllCheckboxes(this, false)">
                                Clear All
                            </button>
                        </div>
                    </div>
                    <div class="flex flex-col gap-2 h-64 overflow-y-auto pr-2" id="product-select">
                        {% for name, id in products.items() %}
                        <label class="selectable-button" data-value="{{ id }}">
                            <input type="checkbox" 
                                   name="selected_products" 
                                   value="{{ id }}" 
                                   class="checkbox-hidden"
                                   hx-get="/dashboard/api/filter"
                                   hx-trigger="change"
                                   hx-target="#card2-content"
                                   hx-include="[name='selected_products'], [name='selected_operations']">
                            {{ name }}
                        </label>
                        {% endfor %}
                    </div>
                </div>
                <div class="selection-container">
                    <label class="selection-label">Operations</label>
                    <div class="flex justify-between items-center mb-2">
                        <label class="selection-label">Operations</label>
                        <div class="space-x-2">
                            <button class="text-xs text-indigo-400 hover:text-indigo-300 transition-colors"
                                    onclick="AllCheckboxes(this, true)">
                                Select All
                            </button>
                            <button class="text-xs text-indigo-400 hover:text-indigo-300 transition-colors"
                                    onclick="AllCheckboxes(this, false)">
                                Clear All
                            </button>
                        </div>
                    </div>
                    <div class="flex flex-col gap-2 h-64 overflow-y-auto pr-2" id="operation-select">
                        {% for name, id in operations.items() %}
                        <label class="selectable-button" data-value="{{ id }}">
                            <input type="checkbox" 
                                   name="selected_operations" 
                                   value="{{ id }}" 
                                   class="checkbox-hidden"
                                   hx-get="/dashboard/api/filter"
                                   hx-trigger="change"
                                   hx-target="#card2-content"
                                   hx-include="[name='selected_products'], [name='selected_operations']">
                            {{ name }}
                        </label>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>

        <!-- Example card spanning 8 columns -->
        <div class="col-span-12 md:col-span-8 dashboard-card">
            <h2 class="text-xl font-semibold mb-4">Card 2</h2>
            <div class="h-64" id="card2-content">
                <!-- Content will be loaded via htmx -->
            </div>
        </div>

        <!-- Remaining cards... (keep existing structure) -->
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('htmx:afterRequest', function(evt) {
    if (evt.detail.requestConfig.path.startsWith('/dashboard/api/filter')) {
        // Get current selections from URL parameters
        const params = new URLSearchParams(window.location.search);
        const selectedProducts = params.getAll('selected_products');
        const selectedOperations = params.getAll('selected_operations');

        // Update button states
        document.querySelectorAll('.selectable-button').forEach(button => {
            const value = button.dataset.value;
            const isProduct = button.closest('#product-select');
            const isSelected = isProduct ? 
                selectedProducts.includes(value) : 
                selectedOperations.includes(value);
            
            button.classList.toggle('selected', isSelected);
        });
    }
});

// Handle select all functionality
function AllCheckboxes(button, value) {
    const container = button.closest('.selection-container');
    const checkboxes = container.querySelectorAll('input[type="checkbox"]');
    
    // Set all checkbox values
    checkboxes.forEach(checkbox => {
        checkbox.checked = value;
    });

    // Initialize HTMX on the checkboxes
    checkboxes.forEach(checkbox => htmx.process(checkbox));

    // Find the first checkbox and trigger its HTMX request
    const firstCheckbox = checkboxes[0];
    if (firstCheckbox) {
        htmx.trigger(firstCheckbox, 'change');
    }
}

// Handle selectable button clicks
document.querySelectorAll('.selectable-button').forEach(button => {
    button.addEventListener('click', function() {
        const checkbox = this.querySelector('input[type="checkbox"]');
        checkbox.checked = !checkbox.checked;
        checkbox.dispatchEvent(new Event('change'));
    });
});

// Initialize selections from URL on page load
document.addEventListener('DOMContentLoaded', function() {
    htmx.trigger('[name="selected_products"], [name="selected_operations"]', 'change');
});
</script>
{% endblock %}
