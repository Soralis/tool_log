{% extends "base.html.j2" %}

{% block title %}Tool Log{% endblock %}

{% block body %}
    {% if user %}
        <div class="fixed top-0 left-1/2 transform -translate-x-1/2 text-l font-bold">
            <button onclick="openModal('changePin')" class="ml-4 text-gray-400 text-l font-bold hover:text-gray-100">{{user.name}}</button>
        </div>
        {% if user.role >= 4 %}
            <a href="/engineer" class="fixed top-0 left-0 p-2 text-2xl bg-transparent hover:bg-transparent">
                <button class="p-2">&#9881;</button>
            </a>
        {% endif %}
        <div id="changePinModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeModal('changePinModal')">&times;</span>
                <div id="changePinContainer">
                    <h1 class="text-5xl font-bold mb-6">Change PIN</h1>
                    <form 
                        id="changePinForm"
                        class="space-y-6 p-4 sm:p-6 md:p-8">
                        <div id="pinFormError" class="hidden">
                            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                                <span class="block sm:inline" id="pinErrorMessage"></span>
                            </div>
                        </div>
                        <div id="pinFormSuccess" class="hidden">
                            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
                                <span class="block sm:inline">PIN successfully changed!</span>
                            </div>
                        </div>
                        <input type="hidden" name="id" value="{{user.id}}">
                        <input type="hidden" name="name" value="{{user.name}}">
                        <input type="hidden" name="initials" value="{{user.initials}}">
                        <input type="hidden" name="role" value="{{user.role}}">
                        <input type="hidden" name="active" value="{{user.active}}">
                        <input type="hidden" id="current-pin-value" value="{{user.pin}}">
                        <div>
                            <label for="current-pin" class="block text-2xl font-medium text-gray-300 sm:text-4xl">Current PIN</label>
                            <input type="password" inputmode="numeric" pattern="[0-9]*" id="current-pin" name="current_pin"
                                class="mt-1 block w-full pl-3 pr-10 py-4 text-xl border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-base rounded-md"
                                oninput="javascript: if (this.value.length > 4) this.value = this.value.slice(0, 4)">
                        </div>
                        <div>
                            <label for="new-pin" class="block text-2xl font-medium text-gray-300 sm:text-4xl">New PIN</label>
                            <input type="password" inputmode="numeric" pattern="[0-9]*" id="new-pin" name="new_pin"
                                class="mt-1 block w-full pl-3 pr-10 py-4 text-xl border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-base rounded-md"
                                oninput="javascript: if (this.value.length > 4) this.value = this.value.slice(0, 4)">
                        </div>
                        <div>
                            <label for="confirm-pin" class="block text-2xl font-medium text-gray-300 sm:text-4xl">Confirm New PIN</label>
                            <input type="password" inputmode="numeric" pattern="[0-9]*" id="confirm-pin" name="confirm_pin"
                                class="mt-1 block w-full pl-3 pr-10 py-4 text-xl border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-base rounded-md"
                                oninput="javascript: if (this.value.length > 4) this.value = this.value.slice(0, 4)">
                        </div>
                        <div>
                            <button type="submit" class="w-full flex justify-center py-4 px-6 border border-transparent rounded-md shadow-sm text-3xl font-bold text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm">
                                Change PIN
                            </button>
                        </div>
                    </form>
                    <script>
                        document.getElementById('changePinForm').addEventListener('submit', async function(e) {
                            e.preventDefault();
                            const errorDiv = document.getElementById('pinFormError');
                            const errorMessage = document.getElementById('pinErrorMessage');
                            const successDiv = document.getElementById('pinFormSuccess');
                            
                            const currentPin = document.getElementById('current-pin').value.padStart(4, '0');
                            const storedPin = document.getElementById('current-pin-value').value;
                            const newPin = document.getElementById('new-pin').value.padStart(4, '0');
                            const confirmPin = document.getElementById('confirm-pin').value.padStart(4, '0');
                            const userId = this.querySelector('input[name="id"]').value;

                            // Validate current PIN
                            if (currentPin !== storedPin) {
                                errorMessage.textContent = 'Current PIN is incorrect';
                                errorDiv.classList.remove('hidden');
                                successDiv.classList.add('hidden');
                                return;
                            }
                            
                            // Validate new PINs match
                            if (newPin !== confirmPin) {
                                errorMessage.textContent = 'New PINs do not match';
                                errorDiv.classList.remove('hidden');
                                successDiv.classList.add('hidden');
                                return;
                            }
                            
                            const formData = new FormData(this);
                            formData.set('pin', newPin); // Update pin with new value
                            
                            try {
                                const response = await fetch(`/changePin/${userId}`, {
                                    method: 'PATCH',
                                    body: formData
                                });
                                
                                if (response.ok) {
                                    errorDiv.classList.add('hidden');
                                    successDiv.classList.remove('hidden');
                                    this.reset();
                                    // Restore hidden fields after reset
                                    this.querySelector('input[name="id"]').value = '{{user.id}}';
                                    this.querySelector('input[name="name"]').value = '{{user.name}}';
                                    this.querySelector('input[name="initials"]').value = '{{user.initials}}';
                                    this.querySelector('input[name="role"]').value = '{{user.role}}';
                                    this.querySelector('input[name="active"]').value = '{{user.active}}';
                                    setTimeout(() => {
                                        closeModal('changePinModal');
                                        successDiv.classList.add('hidden');
                                    }, 2000);
                                } else {
                                    const data = await response.json();
                                    errorMessage.textContent = data.detail || 'An error occurred while changing the PIN';
                                    errorDiv.classList.remove('hidden');
                                    successDiv.classList.add('hidden');
                                }
                            } catch (error) {
                                errorMessage.textContent = 'An error occurred while changing the PIN';
                                errorDiv.classList.remove('hidden');
                                successDiv.classList.add('hidden');
                            }
                        });
                    </script>
                </div>
            </div>
        </div>

        {% if user.role >= 2 %}
            <div id="userManagementModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal('userManagementModal')">&times;</span>
                    <div id="userManagementContainer">
                        <h1 class="text-5xl font-bold mb-6">Create Operator</h1>
                        <form 
                            id="createUserForm"
                            class="space-y-6 p-4 sm:p-6 md:p-8">
                            <div id="userFormError" class="hidden">
                                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                                    <span class="block sm:inline" id="errorMessage"></span>
                                </div>
                            </div>
                            <div>
                                <label for="user-name" class="block text-2xl font-medium text-gray-700 sm:text-4xl">Name</label>
                                <input type="text" id="user-name" name="name" required
                                    class="mt-1 block w-full pl-3 pr-10 py-4 text-xl border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-base rounded-md">
                            </div>
                            <div>
                                <label for="user-initials" class="block text-2xl font-medium text-gray-700 sm:text-4xl">Initials</label>
                                <input type="text" id="user-initials" name="initials" required
                                    class="mt-1 block w-full pl-3 pr-10 py-4 text-xl border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-base rounded-md">
                            </div>
                            <input type="hidden" name="pin" value="0000">
                            <input type="hidden" name="role" value="1">
                            <div>
                                <button type="submit" class="w-full flex justify-center py-4 px-6 border border-transparent rounded-md shadow-sm text-2xl font-bold text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm">
                                    Create Operator
                                </button>
                            </div>
                        </form>
                        <script>
                            document.getElementById('createUserForm').addEventListener('submit', async function(e) {
                                e.preventDefault();
                                const formData = new FormData(this);
                                const errorDiv = document.getElementById('userFormError');
                                const errorMessage = document.getElementById('errorMessage');
                                
                                try {
                                    const response = await fetch('/createOperator', {
                                        method: 'POST',
                                        body: formData
                                    });
                                    
                                    if (response.ok) {
                                        errorDiv.classList.add('hidden');
                                        const data = await response.json()
                                        showToast(data.message || 'An Error occured')
                                        closeModal('userManagementModal');
                                        this.reset();
                                    } else {
                                        const data = await response.json();
                                        errorMessage.textContent = 'Initials already in Use, change them.';
                                        errorDiv.classList.remove('hidden');
                                    }
                                } catch (error) {
                                    errorMessage.textContent = 'An error occurred while creating the user.';
                                    errorDiv.classList.remove('hidden');
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        {% endif %}

        {% if machines %}
            <div id="changeoverModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal('changeoverModal')">&times;</span>
                    <div id="changeoverContainer">
                        <h1 class="text-5xl font-bold mb-6">Change Over</h1>
                        {% include 'operator/change_over.html.j2' with context %}
                    </div>
                </div>
            </div>

            <div id="toollogModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal('toollogModal')">&times;</span>
                    <div id="toollogContainer">
                        <!-- Tool log content goes here -->
                        {% include 'operator/tool_life.html.j2' with context %}
                    </div>
                </div>
            </div>

            {% if user.role >= 4 %}
                <div id="recipeSelectModal" class="modal">
                    <div class="modal-content">
                        <span class="close" onclick="closeModal('recipeSelectModal')">&times;</span>
                        <div id="recipeSelectContainer">
                            <h1 class="text-5xl font-bold mb-6">Select Recipe</h1>
                            <form 
                                id="recipeSelectForm"
                                class="space-y-6 p-4 sm:p-6 md:p-8">
                                <div>
                                    {% if machines|length > 1 %}
                                        <label for="recipe-edit-machine-select" class="block text-2xl font-medium text-gray-700 sm:text-4xl">Select Machine</label>
                                        <select id="recipe-edit-machine-select" name="machine_id" class="mt-1 block w-full pl-3 pr-10 py-4 text-xl border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-base rounded-md">
                                            <option value="">Select a machine</option>
                                            {% for machine in machines %}
                                                <option value="{{ machine.id }}">{{ machine.name }}</option>
                                            {% endfor %}
                                        </select>
                                    {% else %}
                                        <input type="hidden" id="recipe-edit-machine-select" name="machine_id" value="{{ machines[0].id }}">
                                        <label for="recipe-edit-machine-select" class="block text-4xl font-bold">Selected Machine</label>
                                        <span class="block w-full pl-3 pr-10 py-4 text-3xl border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-base rounded-md">{{ machines[0].name }}</span>
                                    {% endif %}
                                </div>

                                <div id="recipe-edit-recipe-form" class="hidden">
                                    <label for="recipe-edit-recipe-select" class="block text-4xl font-bold">Select Recipe</label>
                                    <select id="recipe-edit-recipe-select" name="recipe_id" class="mt-1 block w-full pl-3 pr-10 py-4 text-3xl border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-base rounded-md">
                                        <option value="">Select a recipe</option>
                                    </select>
                                </div>

                                <div>
                                    <button type="submit" class="w-full flex justify-center py-4 px-6 border border-transparent rounded-md shadow-sm text-2xl font-bold text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm">
                                        Edit Recipe
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                {# Include recipe form for edit #}
                {% with 
                    modal_id='recipeEditModal',
                    form_id='recipeEditForm',
                    title='Edit Recipe',
                    prefix='edit',
                    submit_text='Save Changes',
                    is_edit=true
                %}
                    {% include "engineer/partials/recipe_form.html.j2" %}
                {% endwith %}

                {# Include tool position form for edit #}
                {% with 
                    modal_id='editToolPositionModal',
                    form_id='editToolPositionForm',
                    title='Edit Tool Position',
                    prefix='edit',
                    submit_text='Save'
                %}
                    {% include "engineer/partials/tool_position_form.html.j2" %}
                {% endwith %}
            {% endif %}
        {% endif %}

        <div class="flex flex-col justify-center items-center h-screen">
            {% if machines %}
                {% for machine in machines %}
                    <div class="text-3xl font-bold">
                        {{ machine.name }}: {{ machine.current_recipe.name }}
                    </div>
                {% endfor %}
                <button onclick="openModal('changeover')" class="w-full py-8 text-4xl font-bold rounded-lg bg-blue-500 hover:bg-blue-700 text-white my-4">Changeover</button>
                <button onclick="openModal('toollog')" class="w-full py-16 text-6xl font-bold rounded-lg bg-green-500 hover:bg-green-700 text-white my-4">Tool Log</button>
                {% if user and user.role >= 4 %}
                    <button onclick="openModal('recipeSelect')" class="w-full py-8 text-4xl font-bold rounded-lg bg-purple-500 hover:bg-purple-700 text-white my-4">Edit Recipe</button>
                {% endif %}
            {% endif %}
            {% if user and user.role >= 2 %}
                <div class="flex space-x-4 w-full">
                    <button onclick="openModal('userManagement')" class="flex-1 py-8 text-4xl font-bold rounded-lg bg-yellow-500 hover:bg-yellow-700 text-white my-4">Create Operator</button>
                    <a href="/device/getDeviceInfo" class="flex-1 py-8 text-4xl font-bold rounded-lg bg-blue-500 hover:bg-blue-700 text-white my-4 text-center inline-block no-underline">Edit Device Info</a>
                </div>
            {% endif %}
            </div>
    {% endif %}

{% endblock %}
