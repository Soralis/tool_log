<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Digital ToolLog IFA{% endblock %}</title>
    <link rel="stylesheet" href="{{ url_for('static', path='css/style.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', path='css/virtual-keyboard.css') }}">
    <script src="https://unpkg.com/htmx.org@1.9.2"></script>
    <script src="{{ url_for('static', path='js/engineer.js') }}" defer></script>
    <script src="{{ url_for('static', path='js/virtual-keyboard.js') }}" defer></script>
    <script>
        async function getDeviceToken() {
            const deviceName = new URLSearchParams(window.location.search).get('device_name');
            if (deviceName) {
                const response = await fetch('/authenticateDevice', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ device_name: deviceName }),
                });
                if (response.ok) {
                    console.log('Device authenticated');
                } else {
                    console.error('Device authentication failed');
                }
            }
        }

        async function checkOperatorAuth() {
            try {
                const response = await fetch('/checkOperatorAuth', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    credentials: 'include'
                });
                console.log("Auth check response:", response);
                console.log("Auth check status:", response.status);
                console.log("Auth check ok:", response.ok);
                return response.ok;
            } catch (error) {
                console.error('Error checking operator auth:', error);
                return false;
            }
        }

        // Also, add this to see what cookies are present in the browser
        document.addEventListener('DOMContentLoaded', function() {
            console.log("All cookies:", document.cookie);
        });

        document.addEventListener('DOMContentLoaded', async function() {
            await getDeviceToken();
            if (!window.location.pathname.includes('/login')) {
                const isOperatorAuthenticated = await checkOperatorAuth();
                if (!isOperatorAuthenticated) {
                    window.location.href = '/login';
                }
            }
        });

        // HTMX extension to add the device and operator tokens to all requests
        htmx.defineExtension('auth-headers', {
            onEvent: function(name, evt) {
                if (name === "htmx:configRequest") {
                    evt.detail.headers['X-Device-Token'] = document.cookie.replace(/(?:(?:^|.*;\s*)device_token\s*\=\s*([^;]*).*$)|^.*$/, "$1");
                    evt.detail.headers['X-Operator-Token'] = document.cookie.replace(/(?:(?:^|.*;\s*)operator_token\s*\=\s*([^;]*).*$)|^.*$/, "$1");
                }
            }
        });
    </script>
    {% block extra_head %}{% endblock %}
</head>
<body hx-ext="auth-headers">
    {% block body %}{% endblock %}

    <div id="virtual-keyboard" class="virtual-keyboard">
        <div id="'full-keyboard">
            <div class="keyboard-row">
                <button class="key">1</button>
                <button class="key">2</button>
                <button class="key">3</button>
                <button class="key">4</button>
                <button class="key">5</button>
                <button class="key">6</button>
                <button class="key">7</button>
                <button class="key">8</button>
                <button class="key">9</button>
                <button class="key">0</button>
            </div>
            <div class="keyboard-row">
                <button class="key">q</button>
                <button class="key">w</button>
                <button class="key">e</button>
                <button class="key">r</button>
                <button class="key">t</button>
                <button class="key">y</button>
                <button class="key">u</button>
                <button class="key">i</button>
                <button class="key">o</button>
                <button class="key">p</button>
            </div>
            <div class="keyboard-row">
                <button class="key">a</button>
                <button class="key">s</button>
                <button class="key">d</button>
                <button class="key">f</button>
                <button class="key">g</button>
                <button class="key">h</button>
                <button class="key">j</button>
                <button class="key">k</button>
                <button class="key">l</button>
            </div>
            <div class="keyboard-row">
                <button class="key">z</button>
                <button class="key">x</button>
                <button class="key">c</button>
                <button class="key">v</button>
                <button class="key">b</button>
                <button class="key">n</button>
                <button class="key">m</button>
                <button class="key special-key" id="backspace">⌫</button>
            </div>
            <div class="keyboard-row">
                <button class="key special-key" id="space">Space</button>
                <button class="key special-key" id="close">Close</button>
            </div>
        </div>

        <div id="numpad" style="display: none;">
            <div class="keyboard-row">
                <button class="key">7</button>
                <button class="key">8</button>
                <button class="key">9</button>
            </div>
            <div class="keyboard-row">
                <button class="key">4</button>
                <button class="key">5</button>
                <button class="key">6</button>
            </div>
            <div class="keyboard-row">
                <button class="key">1</button>
                <button class="key">2</button>
                <button class="key">3</button>
            </div>
            <div class="keyboard-row">
                <button class="key">0</button>
                <button class="key">.</button>
                <button class="key special-key" id="backspace">⌫</button>
            </div>
            <div class="keyboard-row">
                <button class="key special-key" id="close">Close</button>
            </div>
        </div>
    </div>

</body>
</html>
